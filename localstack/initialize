#!/bin/sh

REGION=us-east-2
BUCKET=cobalt
IC_ORDER_HL7_BUCKET=cobalt-ic-example-hl7
IC_ORDER_HL7_TEST_DIR=/localstack/secrets/patient-order-hl7

function fail() {
    echo $2
    exit $1
}

echo "Creating S3 bucket..."

aws --endpoint-url=http://localstack-cobalt:4801 s3api create-bucket --bucket ${BUCKET} --region ${REGION} --create-bucket-configuration LocationConstraint=${REGION}
aws --endpoint-url=http://localstack-cobalt:4801 s3api put-bucket-acl --bucket ${BUCKET} --region ${REGION} --acl public-read
aws --endpoint-url=http://localstack-cobalt:4801 s3api put-bucket-cors --bucket ${BUCKET} --region ${REGION} --cors-configuration file://s3-bucket-cors.json

echo "Creating S3 Integrated Care HL7 Order bucket..."

aws --endpoint-url=http://localstack-cobalt:4801 s3api create-bucket --bucket ${IC_ORDER_HL7_BUCKET} --region ${REGION} --create-bucket-configuration LocationConstraint=${REGION}
aws --endpoint-url=http://localstack-cobalt:4801 s3api put-bucket-acl --bucket ${IC_ORDER_HL7_BUCKET} --region ${REGION} --acl public-read
aws --endpoint-url=http://localstack-cobalt:4801 s3api put-bucket-cors --bucket ${IC_ORDER_HL7_BUCKET} --region ${REGION} --cors-configuration file://s3-bucket-cors.json

if [ -e $IC_ORDER_HL7_TEST_DIR ]
then
    for IC_ORDER_HL7_TEST_FILE in "$IC_ORDER_HL7_TEST_DIR"/*
    do
        IC_ORDER_HL7_TEST_FILENAME=$(basename ${IC_ORDER_HL7_TEST_FILE})
        echo "Loading Integrated Care HL7 Order file '$IC_ORDER_HL7_TEST_FILENAME' into S3 bucket '${IC_ORDER_HL7_BUCKET}'..."
        aws --endpoint-url=http://localstack-cobalt:4801 s3api put-object --bucket ${IC_ORDER_HL7_BUCKET} --region ${REGION} --key ${IC_ORDER_HL7_TEST_FILENAME} --body ${IC_ORDER_HL7_TEST_FILE} 1> /dev/null
    done
fi

echo "Verifying SES identity..."

aws --endpoint-url=http://localstack-cobalt:4801 ses verify-email-identity --email-address no-reply@cobaltplatform.com --region ${REGION}

[ $? == 0 ] || fail 1 "Failed: AWS / ses / verify-email-identity"

# TODO: add SNS topic for listening to email bounces (and configuration set), see https://stackoverflow.com/a/75440135

echo "Creating Secrets"

if [ ! -f /localstack/secrets/cobalt-local-configuration ]
then
    fail 1 "*** Missing file ./localstack/secrets/cobalt-local-configuration, cannot complete bootstrap. ***"
fi

aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-configuration"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-configuration"  --description "Local Secrets"  --secret-string file:///localstack/secrets/cobalt-local-configuration --region ${REGION}  1> /dev/null

aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-crt"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-crt"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.crt --region ${REGION}  1> /dev/null

aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-pem"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-pem"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.pem --region ${REGION}  1> /dev/null


aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-epic-nonprod-crt"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-epic-nonprod-crt"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.epic.nonprod.crt --region ${REGION}  1> /dev/null

aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-epic-nonprod-pem"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-epic-nonprod-pem"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.epic.nonprod.pem --region ${REGION}  1> /dev/null


aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-epic-prod-crt"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-epic-prod-crt"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.epic.prod.crt --region ${REGION}  1> /dev/null

aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-epic-prod-pem"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-epic-prod-pem"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.epic.prod.pem --region ${REGION}  1> /dev/null

aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-microsoft-crt"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-microsoft-crt"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.microsoft.crt --region ${REGION}  1> /dev/null

aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-cobalt-microsoft-pem"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-cobalt-microsoft-pem"  --description "Local Secrets"  --secret-binary fileb:///config/cobalt.microsoft.pem --region ${REGION}  1> /dev/null

if [ -e /localstack/secrets/cobalt-local-microsoft-teams-client-secret-COBALT ]
then
    echo "Using localstack secret value for cobalt-local-microsoft-teams-client-secret-COBALT"
    MICROSOFT_TEAMS_CLIENT_SECRET_COBALT=`cat /localstack/secrets/cobalt-local-microsoft-teams-client-secret-COBALT`

    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-microsoft-teams-client-secret-COBALT"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-microsoft-teams-client-secret-COBALT"  --description "Microsoft Teams Client Secret for COBALT institution"  --secret-string ${MICROSOFT_TEAMS_CLIENT_SECRET_COBALT} --region ${REGION}  1> /dev/null
else
    echo "No Localstack secret value for cobalt-local-microsoft-teams-client-secret-COBALT, using fake value instead..."
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-microsoft-teams-client-secret-COBALT"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-microsoft-teams-client-secret-COBALT"  --description "Microsoft Teams Client Secret for COBALT institution"  --secret-string "fake" --region ${REGION}  1> /dev/null
fi

if [ -e /localstack/secrets/cobalt-local-google-fcm-service-account-private-key-COBALT ]
then
    echo "Using Localstack secret value for cobalt-local-google-fcm-service-account-private-key-COBALT..."
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-google-fcm-service-account-private-key-COBALT"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-google-fcm-service-account-private-key-COBALT"  --description "Cobalt FCM Service Account Private Key for COBALT institution" --secret-string file:///localstack/secrets/cobalt-local-google-fcm-service-account-private-key-COBALT --region ${REGION}  1> /dev/null
fi

if [ -e /localstack/secrets/cobalt-local-twilio-auth-token-COBALT_IC ]
then
    echo "Using Localstack secret value for cobalt-local-twilio-auth-token-COBALT_IC..."
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-twilio-auth-token-COBALT_IC"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-twilio-auth-token-COBALT_IC"  --description "Twilio Auth Token for COBALT_IC institution" --secret-string file:///localstack/secrets/cobalt-local-twilio-auth-token-COBALT_IC --region ${REGION}  1> /dev/null
fi

if [ -e /localstack/secrets/cobalt-local-tableau-secret-id-COBALT ]
then
    echo "Using Localstack secret value for cobalt-local-tableau-secret-id-COBALT..."
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-tableau-secret-id-COBALT"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-tableau-secret-id-COBALT"  --description "Tableau Secret ID for COBALT institution" --secret-string file:///localstack/secrets/cobalt-local-tableau-secret-id-COBALT --region ${REGION}  1> /dev/null
fi

if [ -e /localstack/secrets/cobalt-local-tableau-secret-value-COBALT ]
then
    echo "Using Localstack secret value for cobalt-local-tableau-secret-value-COBALT..."
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager delete-secret --secret-id "cobalt-local-tableau-secret-value-COBALT"  --force-delete-without-recovery --region ${REGION} > /dev/null 2>&1
    aws --endpoint-url=http://localstack-cobalt:4801 secretsmanager create-secret --name "cobalt-local-tableau-secret-value-COBALT"  --description "Tableau Secret Value for COBALT institution" --secret-string file:///localstack/secrets/cobalt-local-tableau-secret-value-COBALT --region ${REGION}  1> /dev/null
fi

echo "Localstack initialization complete."
