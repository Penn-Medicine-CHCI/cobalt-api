# Build image
#
# DOCKER_BUILDKIT=1 docker build . -t cobalt-api -f docker/Dockerfile

# Run image
#
# docker run -e COBALT_API_ENV='local' -e COBALT_API_PORT='8080' -p 8080:8080 cobalt-api

# Interactive shell
#
# docker run -it cobalt-api sh

# Stop image
#
# docker stop $(docker ps -q --filter ancestor=cobalt-api)

FROM public.ecr.aws/docker/library/maven:3.9.5-amazoncorretto-21 as dependencies
COPY ./pom.xml ./pom.xml
RUN mvn --no-transfer-progress -DskipTests install
RUN mvn --no-transfer-progress dependency:go-offline

FROM public.ecr.aws/docker/library/maven:3.9.5-amazoncorretto-21 as build
COPY --from=dependencies /root/.m2 /root/.m2
COPY pom.xml pom.xml
COPY ./src ./src
RUN mvn --no-transfer-progress -o  -DskipTests install compile
RUN mvn --no-transfer-progress -o -DincludeScope=runtime dependency:copy-dependencies

FROM public.ecr.aws/amazoncorretto/amazoncorretto:21 as run
ARG GIT_COMMIT_HASH=None
ARG GIT_BRANCH=None
# Ensure cache entries for successful DNS lookups expire after 5 seconds
RUN echo -e "\nnetworkaddress.cache.ttl=5\n" >> /usr/lib/jvm/java-21-amazon-corretto/conf/security/java.security
# RUN apk add --no-cache curl
RUN yum -y install curl
WORKDIR /opt/app
COPY --from=build target/classes classes
COPY --from=build target/dependency dependency
COPY --from=build target/cobalt-api-1.0.0-SNAPSHOT.jar .
COPY resources resources
COPY messages messages
COPY config config
COPY web web
COPY pom.xml pom.xml
RUN printf '%s' ${GIT_COMMIT_HASH} | tee git-commit-hash
RUN printf '%s' ${GIT_BRANCH} | tee git-branch
RUN chown -R 1000:1000 /opt/app
USER 1000
EXPOSE 8080
RUN mkdir graalvm-cache
COPY launch.sh .
CMD ["sh", "launch.sh"]
#CMD ["java", "-cp", "classes:dependency/*", "com.cobaltplatform.api.App"]
